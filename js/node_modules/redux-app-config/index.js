import { createStore, combineReducers, applyMiddleware } from 'redux';

import { persistStore, autoRehydrate } from 'redux-persist';
import { AsyncStorage } from 'react-native';
import configureRedux from 'redux-config';

import * as config from './config';
import middlewares from './middlewares';
import updateStore from './updateStore';

const { actions, reducers, persists } = configureRedux(config);

export default actions;

export const store = createStore(
  combineReducers({
    ...reducers,
  }),
  applyMiddleware(...middlewares),
  autoRehydrate(),
);

console.info('[Redux] store to persist', { actions, reducers, persists });

const configApp = {
  storage: AsyncStorage,
  whitelist: persists,
  // transforms: [immutableTransform()],
};

export function onLoadRedux(onComplete) {
  const persistor = persistStore(store, configApp, () => {
    // update store due to app update
    updateStore({ persistor, store, actions });
    onComplete();
  });
}
